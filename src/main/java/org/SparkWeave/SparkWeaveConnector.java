/**
 * This file was automatically generated by the Mule Development Kit
 */
package org.sparkweave;

import org.mule.api.annotations.Connector;
import org.mule.api.annotations.Connect;
import org.mule.api.annotations.ValidateConnection;
import org.mule.api.annotations.ConnectionIdentifier;
import org.mule.api.annotations.Disconnect;
import org.mule.api.annotations.param.ConnectionKey;
import org.mule.api.annotations.param.Default;
import org.mule.api.annotations.param.Optional;
import org.mule.api.annotations.param.Payload;
import org.mule.api.ConnectionException;
import org.mule.api.annotations.Configurable;
import org.mule.api.annotations.Processor;
import org.sparkweave.filesync4j.client;

/**
 * SparkWeave Cloud Connector
 * 
 * @author SparkWeave, LLC.
 */
@Connector(name = "sparkweave", schemaVersion = "1.0-SNAPSHOT")
public class SparkWeaveConnector
{
  private FileSyncClient FsClient;
  /**
   * The server name of SparkWeave server
   */
  @Configurable
  private String Server;

  public void setServer(String server)
  {
    this.Server = server;
  }

  public String getServer()
  {
    return Server;
  }

  /**
   * The user email address to access SparkWeave FileSync Services
   */
  @Configurable
  private String UserEmail;

  public void setUserEmail(String str)
  {
    UserEmail = str;
  }
  
  public String getUserEmail()
  {
    return UserEmail;
  }

  /**
   * The user password to access SparkWeave FileSync Services
   */
  @Configurable
  private String UserPassword;

  public void setUserPassword(String str)
  {
    UserPassword = str;
  }
  
  public String getUserPassword()
  {
    return UserPassword;
  }

  /**
   * Set to true to use https communication (default: false)
   */
  @Configurable
  @Optional
  @Default("false")
  private boolean UseHttps;

  public void setUseHttps(boolean value)
  {
    UseHttps = value;
  }
  
  public boolean getUseHttps()
  {
    return UseHttps;
  }

  /**
   * Turn debug on
   */
  @Configurable
  @Optional
  @Default("false")
  private boolean Debug;

  public boolean isDebug()
  {
    return Debug;
  }

  public void setDebug(boolean debug)
  {
    this.Debug = debug;
  }

  /**
   * Connect
   * 
   * @param username
   *          A username
   * @param password
   *          A password
   * @throws ConnectionException
   */
  @Connect
  public void connect(@ConnectionKey String username, String password)
      throws ConnectionException
  {
    FsClient  = new FileSyncClient();
    FsClient.Login();
  }

  /**
   * Disconnect
   */
  @Disconnect
  public void disconnect()
  {
    /*
     * CODE FOR CLOSING A CONNECTION GOES IN HERE
     */
  }

  /**
   * Are we connected
   */
  @ValidateConnection
  public boolean isConnected()
  {
    return true;
  }

  /*
   * return a string for a session id?
   */
  @ConnectionIdentifier
  public String getSessionId()
  {
    return "SparkWeave";
  }
}
